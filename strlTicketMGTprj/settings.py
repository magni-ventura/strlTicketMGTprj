"""
Django settings for strlTicketMGTprj project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p0&_oqtto7-izc2v5bwrl-7!^^8#0t%xf_udoti&n_qnj8c1vv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'apps.accounts',
    'apps.dashboard',
    'apps.tickets',
    'widget_tweaks'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'strlTicketMGTprj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'strlTicketMGTprj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#Default User model type
AUTH_USER_MODEL = 'accounts.User'
#AUTH_USER_MODEL = "users.User"


#Defining The Logger
import logging
import logging.config
from django.utils.log import DEFAULT_LOGGING

#This will retrieve a Python log instance or create one
logger = logging.getLogger(__name__)

#Global log levels
LOG_LEVEL = "INFO"
#Configure log levels
logging.config.dictConfig({
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {

        "console": {
            "format": "%(asctime)s %(name)-12s %(levelname)-8s %(message)s",
        },

        "file": {"format": "%(asctime)s %(name)-12s %(levelname)-8s %(message)s",
        },
        #Django server formatters
        "django.server": DEFAULT_LOGGING["formatters"]["django.server"],
    },

    #Defining the handlers
    "handlers": {
        #console handler
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "console",
        },
        #file handler
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "formatter": "file",
            "filename": "logs/ticket_sys_logs.log"
        },
        #Django server formatters
        "django.server": DEFAULT_LOGGING["handlers"]["django.server"],
    },

    #Defining the loggers
    "loggers": {
        "": {
            "level": "INFO", "handlers":["console", "file"], "propagate":False
        },
        #Defining apps for the loggers propagate is required to prevent a double login with the root logger
        "apps": {
            "level": "INFO", "handlers":["console"], "propagate":False
        },
        #Django server formatters
        "django.server": DEFAULT_LOGGING["loggers"]["django.server"],
    }

})